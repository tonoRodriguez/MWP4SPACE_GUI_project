#########################################################################
###     LN_phase_modulator_CHARGE.lsf
###     Script 1 of 2 that should be run with LN_phase_modulator.ldev
###     It will calculate the DC electric field using CHARGE sweeping over voltage. 
###     The script then derives the electro-optic permittivity using Pockels Formulation 
###
###     Copyright 2023 Ansys, Inc
#########################################################################

######################################
### Define physical constants
######################################


### Lithium Niobate telecom permitivity
eps_o = 2.21^2;
eps_e = 2.14^2;

### Lithium Niobate non;linear coefficents
r_13 = 9.6e-12;
r_33 = 30.9e-12;

######################################
### Run Electrostatic Simulation
######################################
switchtolayout;

run("CHARGE");
electro = getresult("CHARGE::monitor","electrostatics");

###################################
### Calculate the EO modulation
###################################

### Get electrostatic results
E = pinch(electro.E);
Volt = electro.V_Signal;

### Intialize perturbation matrices same size as E
dts = size(E);
n_EO = matrix(dts(1),dts(2),dts(3));
dn = matrix(dts(1),dts(2),dts(3));

### Vector components work well with unstructured datasets, need to do this for voltage and wavelength
for (vv =1:length(Volt)){
   
    ### Spatial index data
    eps_unperturbed = [eps_e*ones(dts(1),1),eps_o*ones(dts(1),1),eps_o*ones(dts(1),1)];
    
    ### Pockels effect
    deps_inv = [r_33*pinch(E(:,vv,1)),r_13*pinch(E(:,vv,1)),r_13*pinch(E(:,vv,1))];
    
    ### Combine index + perturbation
    n_EO(:,vv,:) = sqrt((eps_unperturbed^-1+deps_inv)^-1);
}


dn = n_EO;
dn(:,:,1) = n_EO(:,:,1)  - sqrt(eps_e);          
dn(:,:,2:3) = n_EO (:,:,2:3)  - sqrt(eps_o); 

### Add dn and n_EO to dataset and visualize
electro.addattribute('n_EO',n_EO); ## total index
electro.addattribute('dn',dn); ## total index
visualize(electro);    