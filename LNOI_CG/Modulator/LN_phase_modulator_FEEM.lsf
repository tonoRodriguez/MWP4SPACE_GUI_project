#########################################################################
###     LN_phase_modulator_FEEM.lsf
###     Script 2 of 2 that should be run with LN_phase_modulator.ldev
###     It will calculate the optical modes using FEEM sweeping over voltage. 
###     The script then derives and plots the performance
###
###     Copyright 2023 Ansys, Inc
#########################################################################

######################################
### Set-up Optical simulation
######################################
switchtolayout;  
neff_TE = matrix(length(Volt));

### Create new unstructured dataset based on CHARGE data grid at this wavelength
lambda = getnamed("FEEM","wavelength");
nkmaterial = unstructureddataset("nk import",electro.x,electro.y,electro.z,electro.elements);
nkmaterial.addparameter("lambda", lambda) ;
nkmaterial.addparameter("Voltage", Volt) ;
nkmaterial.addattribute("nk",n_EO);
    
### Import, the nk dataset and apply to waveguide solid 
setnamed("FEEM::nk import","enabled",true);
select("FEEM::nk import"); 
importdataset(nkmaterial);
set("volume type","solid");
set("volume solid","LiNbO3 WG");
set("selected attribute","nk");
  
### After set up run 0 V case    
run("FEEM");

### Find Fundamental TE Mode effective index
TE_pol_frac = getresult("FEEM","modeproperties.TE polarization fraction");
TE_pol_frac = TE_pol_frac.%TE polarization fraction%;
neff = getresult("FEEM","modeproperties.neff");
neff = neff.neff;
mde_num = find(TE_pol_frac>0.95);
neff_TE(1) = neff(mde_num(1));
print(mde_num);
#mde_num = find(TE_pol_frac>0.95);
#neff_TE(1) = neff(mde_num(1));
#neff_TE(1) = neff(1);
######################################
### Run Voltage sweep
######################################

for (vv=2:length(Volt)){    
    switchtolayout;
    setnamed("FEEM::nk import","Voltage_index",vv);
    run("FEEM");
    

    ### Find Fundamental TE Mode
    TE_pol_frac = getresult("FEEM","modeproperties.TE polarization fraction");
    TE_pol_frac = TE_pol_frac.%TE polarization fraction%;
    neff = getresult("FEEM","modeproperties.neff");
    neff = neff.neff;
    #fields = getresult("FEEM","fields");
    mde_num = find(TE_pol_frac>0.95);
    #print(mde_num);
    neff_TE(vv) = neff(mde_num(1));
    #neff_TE(vv) = neff(1);
}

######################################
### Calculate Final Metrics
######################################

dneff = neff_TE-neff_TE(1);
L_pi = lambda / (2*real(dneff));
alpha_dB = -.20*log10(exp(-2*pi*imag(neff_TE)/lambda));

plot(Volt,real(neff_TE),"Voltage (in V)","neff (Fundamental TE Mode)", "Effective Index vs Voltage " ,"plot type=line, linewidth=3");
legend("Effective Index");

plot(Volt,L_pi*100,"Voltage [V]","L_pi [cm]", "Modulator Performance" ,"plot type=line, linewidth=3");

plot(Volt,Volt*L_pi*100,"Voltage [V]","V_piL [V-cm]", "Modulator Performance" ,"plot type=line, linewidth=3");
setplot("y max",4); setplot("y min",0);

plot(Volt,alpha_dB,"Voltage [V]","Loss [dB/cm]", "Modulator Performance" ,"plot type=line, linewidth=3");
setplot("y max",7); setplot("y min",3);

